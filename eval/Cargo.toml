[package]
name = "arithmetic-eval"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true
readme = "README.md"
description = "Simple interpreter for arithmetic expressions."
categories = ["mathematics", "compilers", "no-std"]
keywords = ["interpreter", "arithmetic", "scripting", "language"]

[package.metadata.docs.rs]
all-features = true
# Set `docsrs` to enable unstable `doc(cfg(...))` attributes.
rustdoc-args = ["--cfg", "docsrs"]

[dependencies]
# Public dependencies (present in the public API).
arithmetic-parser = { workspace = true, default-features = false }
anyhow.workspace = true
num-bigint = { workspace = true, optional = true }
num-complex = { workspace = true, optional = true }
num-traits.workspace = true

# Private dependencies.
hashbrown = { workspace = true, optional = true }
once_cell.workspace = true

[dev-dependencies]
anyhow = { workspace = true, features = ["default"] }
assert_matches.workspace = true
criterion.workspace = true
glass_pumpkin.workspace = true
nom.workspace = true
pulldown-cmark.workspace = true
sha2.workspace = true
rand.workspace = true
static_assertions.workspace = true
typed-arena.workspace = true
version-sync.workspace = true

[features]
default = ["std"]
# Enables support of types from `std`, such as the `Error` trait.
std = ["anyhow/std", "num-traits/std", "arithmetic-parser/std"]
# Enables support of grammars with complex-valued literals.
complex = ["std", "num-complex", "arithmetic-parser/num-complex"]
# Enables support of grammars with arbitrary-precision integers.
bigint = ["num-bigint", "arithmetic-parser/num-bigint"]

[[bench]]
name = "interpreter"
harness = false
path = "benches/interpreter.rs"

[[example]]
name = "owned_module"
path = "examples/owned_module.rs"
required-features = ["std"]

[[example]]
name = "el_gamal"
path = "examples/el_gamal.rs"
required-features = ["std", "bigint", "num-bigint/rand"]

[[example]]
name = "cyclic_group"
path = "examples/cyclic_group.rs"
required-features = ["std", "bigint", "num-bigint/rand"]
