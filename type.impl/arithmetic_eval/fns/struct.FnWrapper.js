(function() {var type_impls = {
"arithmetic_eval":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-FnWrapper%3CT,+F,+CTX%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/arithmetic_eval/fns/wrapper/mod.rs.html#131-138\">source</a><a href=\"#impl-Clone-for-FnWrapper%3CT,+F,+CTX%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, const CTX: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"arithmetic_eval/fns/struct.FnWrapper.html\" title=\"struct arithmetic_eval::fns::FnWrapper\">FnWrapper</a>&lt;T, F, CTX&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arithmetic_eval/fns/wrapper/mod.rs.html#132-137\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#172\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","arithmetic_eval::fns::wrapper::Unary","arithmetic_eval::fns::wrapper::Binary","arithmetic_eval::fns::wrapper::Ternary","arithmetic_eval::fns::wrapper::Quaternary"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-FnWrapper%3CT,+F,+CTX%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/arithmetic_eval/fns/wrapper/mod.rs.html#118-129\">source</a><a href=\"#impl-Debug-for-FnWrapper%3CT,+F,+CTX%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, F, const CTX: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"arithmetic_eval/fns/struct.FnWrapper.html\" title=\"struct arithmetic_eval::fns::FnWrapper\">FnWrapper</a>&lt;T, F, CTX&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arithmetic_eval/fns/wrapper/mod.rs.html#122-128\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, formatter: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","arithmetic_eval::fns::wrapper::Unary","arithmetic_eval::fns::wrapper::Binary","arithmetic_eval::fns::wrapper::Ternary","arithmetic_eval::fns::wrapper::Quaternary"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FnWrapper%3CT,+F,+CTX%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/arithmetic_eval/fns/wrapper/mod.rs.html#144-157\">source</a><a href=\"#impl-FnWrapper%3CT,+F,+CTX%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, F, const CTX: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt; <a class=\"struct\" href=\"arithmetic_eval/fns/struct.FnWrapper.html\" title=\"struct arithmetic_eval::fns::FnWrapper\">FnWrapper</a>&lt;T, F, CTX&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/arithmetic_eval/fns/wrapper/mod.rs.html#151-156\">source</a><h4 class=\"code-header\">pub const fn <a href=\"arithmetic_eval/fns/struct.FnWrapper.html#tymethod.new\" class=\"fn\">new</a>(function: F) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Creates a new wrapper.</p>\n<p>Note that the created wrapper is not guaranteed to be usable as <a href=\"arithmetic_eval/trait.NativeFn.html\" title=\"trait arithmetic_eval::NativeFn\"><code>NativeFn</code></a>. For this\nto be the case, <code>function</code> needs to be a function or an <a href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\"><code>Fn</code></a> closure,\nand the <code>T</code> type argument needs to be a tuple with the function return type\nand the argument types (in this order).</p>\n</div></details></div></details>",0,"arithmetic_eval::fns::wrapper::Unary","arithmetic_eval::fns::wrapper::Binary","arithmetic_eval::fns::wrapper::Ternary","arithmetic_eval::fns::wrapper::Quaternary"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NativeFn%3CNum%3E-for-FnWrapper%3C(Ret,+T),+F%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/arithmetic_eval/fns/wrapper/mod.rs.html#198\">source</a><a href=\"#impl-NativeFn%3CNum%3E-for-FnWrapper%3C(Ret,+T),+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Num, F, Ret, T&gt; <a class=\"trait\" href=\"arithmetic_eval/trait.NativeFn.html\" title=\"trait arithmetic_eval::NativeFn\">NativeFn</a>&lt;Num&gt; for <a class=\"struct\" href=\"arithmetic_eval/fns/struct.FnWrapper.html\" title=\"struct arithmetic_eval::fns::FnWrapper\">FnWrapper</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(Ret, T)</a>, F, false&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T) -&gt; Ret,\n    T: <a class=\"trait\" href=\"arithmetic_eval/fns/trait.TryFromValue.html\" title=\"trait arithmetic_eval::fns::TryFromValue\">TryFromValue</a>&lt;Num&gt;,\n    Ret: <a class=\"trait\" href=\"arithmetic_eval/fns/trait.IntoEvalResult.html\" title=\"trait arithmetic_eval::fns::IntoEvalResult\">IntoEvalResult</a>&lt;Num&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.evaluate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arithmetic_eval/fns/wrapper/mod.rs.html#198\">source</a><a href=\"#method.evaluate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"arithmetic_eval/trait.NativeFn.html#tymethod.evaluate\" class=\"fn\">evaluate</a>(\n    &amp;self,\n    args: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"type\" href=\"arithmetic_eval/type.SpannedValue.html\" title=\"type arithmetic_eval::SpannedValue\">SpannedValue</a>&lt;Num&gt;&gt;,\n    context: &amp;mut <a class=\"struct\" href=\"arithmetic_eval/struct.CallContext.html\" title=\"struct arithmetic_eval::CallContext\">CallContext</a>&lt;'_, Num&gt;,\n) -&gt; <a class=\"type\" href=\"arithmetic_eval/error/type.EvalResult.html\" title=\"type arithmetic_eval::error::EvalResult\">EvalResult</a>&lt;Num&gt;</h4></section></summary><div class='docblock'>Executes the function on the specified arguments.</div></details></div></details>","NativeFn<Num>","arithmetic_eval::fns::wrapper::Unary"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NativeFn%3CNum%3E-for-FnWrapper%3C(Ret,+T,+U),+F%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/arithmetic_eval/fns/wrapper/mod.rs.html#200\">source</a><a href=\"#impl-NativeFn%3CNum%3E-for-FnWrapper%3C(Ret,+T,+U),+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Num, F, Ret, T, U&gt; <a class=\"trait\" href=\"arithmetic_eval/trait.NativeFn.html\" title=\"trait arithmetic_eval::NativeFn\">NativeFn</a>&lt;Num&gt; for <a class=\"struct\" href=\"arithmetic_eval/fns/struct.FnWrapper.html\" title=\"struct arithmetic_eval::fns::FnWrapper\">FnWrapper</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(Ret, T, U)</a>, F, false&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T, U) -&gt; Ret,\n    T: <a class=\"trait\" href=\"arithmetic_eval/fns/trait.TryFromValue.html\" title=\"trait arithmetic_eval::fns::TryFromValue\">TryFromValue</a>&lt;Num&gt;,\n    U: <a class=\"trait\" href=\"arithmetic_eval/fns/trait.TryFromValue.html\" title=\"trait arithmetic_eval::fns::TryFromValue\">TryFromValue</a>&lt;Num&gt;,\n    Ret: <a class=\"trait\" href=\"arithmetic_eval/fns/trait.IntoEvalResult.html\" title=\"trait arithmetic_eval::fns::IntoEvalResult\">IntoEvalResult</a>&lt;Num&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.evaluate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arithmetic_eval/fns/wrapper/mod.rs.html#200\">source</a><a href=\"#method.evaluate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"arithmetic_eval/trait.NativeFn.html#tymethod.evaluate\" class=\"fn\">evaluate</a>(\n    &amp;self,\n    args: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"type\" href=\"arithmetic_eval/type.SpannedValue.html\" title=\"type arithmetic_eval::SpannedValue\">SpannedValue</a>&lt;Num&gt;&gt;,\n    context: &amp;mut <a class=\"struct\" href=\"arithmetic_eval/struct.CallContext.html\" title=\"struct arithmetic_eval::CallContext\">CallContext</a>&lt;'_, Num&gt;,\n) -&gt; <a class=\"type\" href=\"arithmetic_eval/error/type.EvalResult.html\" title=\"type arithmetic_eval::error::EvalResult\">EvalResult</a>&lt;Num&gt;</h4></section></summary><div class='docblock'>Executes the function on the specified arguments.</div></details></div></details>","NativeFn<Num>","arithmetic_eval::fns::wrapper::Binary"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NativeFn%3CNum%3E-for-FnWrapper%3C(Ret,+T,+U,+V),+F%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/arithmetic_eval/fns/wrapper/mod.rs.html#202\">source</a><a href=\"#impl-NativeFn%3CNum%3E-for-FnWrapper%3C(Ret,+T,+U,+V),+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Num, F, Ret, T, U, V&gt; <a class=\"trait\" href=\"arithmetic_eval/trait.NativeFn.html\" title=\"trait arithmetic_eval::NativeFn\">NativeFn</a>&lt;Num&gt; for <a class=\"struct\" href=\"arithmetic_eval/fns/struct.FnWrapper.html\" title=\"struct arithmetic_eval::fns::FnWrapper\">FnWrapper</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(Ret, T, U, V)</a>, F, false&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T, U, V) -&gt; Ret,\n    T: <a class=\"trait\" href=\"arithmetic_eval/fns/trait.TryFromValue.html\" title=\"trait arithmetic_eval::fns::TryFromValue\">TryFromValue</a>&lt;Num&gt;,\n    U: <a class=\"trait\" href=\"arithmetic_eval/fns/trait.TryFromValue.html\" title=\"trait arithmetic_eval::fns::TryFromValue\">TryFromValue</a>&lt;Num&gt;,\n    V: <a class=\"trait\" href=\"arithmetic_eval/fns/trait.TryFromValue.html\" title=\"trait arithmetic_eval::fns::TryFromValue\">TryFromValue</a>&lt;Num&gt;,\n    Ret: <a class=\"trait\" href=\"arithmetic_eval/fns/trait.IntoEvalResult.html\" title=\"trait arithmetic_eval::fns::IntoEvalResult\">IntoEvalResult</a>&lt;Num&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.evaluate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arithmetic_eval/fns/wrapper/mod.rs.html#202\">source</a><a href=\"#method.evaluate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"arithmetic_eval/trait.NativeFn.html#tymethod.evaluate\" class=\"fn\">evaluate</a>(\n    &amp;self,\n    args: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"type\" href=\"arithmetic_eval/type.SpannedValue.html\" title=\"type arithmetic_eval::SpannedValue\">SpannedValue</a>&lt;Num&gt;&gt;,\n    context: &amp;mut <a class=\"struct\" href=\"arithmetic_eval/struct.CallContext.html\" title=\"struct arithmetic_eval::CallContext\">CallContext</a>&lt;'_, Num&gt;,\n) -&gt; <a class=\"type\" href=\"arithmetic_eval/error/type.EvalResult.html\" title=\"type arithmetic_eval::error::EvalResult\">EvalResult</a>&lt;Num&gt;</h4></section></summary><div class='docblock'>Executes the function on the specified arguments.</div></details></div></details>","NativeFn<Num>","arithmetic_eval::fns::wrapper::Ternary"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-NativeFn%3CNum%3E-for-FnWrapper%3C(Ret,+T,+U,+V,+W),+F%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/arithmetic_eval/fns/wrapper/mod.rs.html#204\">source</a><a href=\"#impl-NativeFn%3CNum%3E-for-FnWrapper%3C(Ret,+T,+U,+V,+W),+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Num, F, Ret, T, U, V, W&gt; <a class=\"trait\" href=\"arithmetic_eval/trait.NativeFn.html\" title=\"trait arithmetic_eval::NativeFn\">NativeFn</a>&lt;Num&gt; for <a class=\"struct\" href=\"arithmetic_eval/fns/struct.FnWrapper.html\" title=\"struct arithmetic_eval::fns::FnWrapper\">FnWrapper</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.tuple.html\">(Ret, T, U, V, W)</a>, F, false&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(T, U, V, W) -&gt; Ret,\n    T: <a class=\"trait\" href=\"arithmetic_eval/fns/trait.TryFromValue.html\" title=\"trait arithmetic_eval::fns::TryFromValue\">TryFromValue</a>&lt;Num&gt;,\n    U: <a class=\"trait\" href=\"arithmetic_eval/fns/trait.TryFromValue.html\" title=\"trait arithmetic_eval::fns::TryFromValue\">TryFromValue</a>&lt;Num&gt;,\n    V: <a class=\"trait\" href=\"arithmetic_eval/fns/trait.TryFromValue.html\" title=\"trait arithmetic_eval::fns::TryFromValue\">TryFromValue</a>&lt;Num&gt;,\n    W: <a class=\"trait\" href=\"arithmetic_eval/fns/trait.TryFromValue.html\" title=\"trait arithmetic_eval::fns::TryFromValue\">TryFromValue</a>&lt;Num&gt;,\n    Ret: <a class=\"trait\" href=\"arithmetic_eval/fns/trait.IntoEvalResult.html\" title=\"trait arithmetic_eval::fns::IntoEvalResult\">IntoEvalResult</a>&lt;Num&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.evaluate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/arithmetic_eval/fns/wrapper/mod.rs.html#204\">source</a><a href=\"#method.evaluate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"arithmetic_eval/trait.NativeFn.html#tymethod.evaluate\" class=\"fn\">evaluate</a>(\n    &amp;self,\n    args: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"type\" href=\"arithmetic_eval/type.SpannedValue.html\" title=\"type arithmetic_eval::SpannedValue\">SpannedValue</a>&lt;Num&gt;&gt;,\n    context: &amp;mut <a class=\"struct\" href=\"arithmetic_eval/struct.CallContext.html\" title=\"struct arithmetic_eval::CallContext\">CallContext</a>&lt;'_, Num&gt;,\n) -&gt; <a class=\"type\" href=\"arithmetic_eval/error/type.EvalResult.html\" title=\"type arithmetic_eval::error::EvalResult\">EvalResult</a>&lt;Num&gt;</h4></section></summary><div class='docblock'>Executes the function on the specified arguments.</div></details></div></details>","NativeFn<Num>","arithmetic_eval::fns::wrapper::Quaternary"],["<section id=\"impl-Copy-for-FnWrapper%3CT,+F,+CTX%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/arithmetic_eval/fns/wrapper/mod.rs.html#140\">source</a><a href=\"#impl-Copy-for-FnWrapper%3CT,+F,+CTX%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>, const CTX: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"arithmetic_eval/fns/struct.FnWrapper.html\" title=\"struct arithmetic_eval::fns::FnWrapper\">FnWrapper</a>&lt;T, F, CTX&gt;</h3></section>","Copy","arithmetic_eval::fns::wrapper::Unary","arithmetic_eval::fns::wrapper::Binary","arithmetic_eval::fns::wrapper::Ternary","arithmetic_eval::fns::wrapper::Quaternary"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()