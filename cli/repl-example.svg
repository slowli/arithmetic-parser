<svg viewBox="0 0 880 492" xmlns="http://www.w3.org/2000/svg">
  <style>
    /* https://github.com/aaron-williamson/base16-alacritty/blob/master/colors/base16-tomorrow-night-256.yml */
    pre {
      background: #1d1f21;
      margin: 0;
      padding: 10px;
      border-radius: 6px;
      color: #ffffff;
      font: 12px SFMono-Regular, Consolas, Liberation Mono, Menlo, monospace;
    }

    pre .bold { font-weight: bold; }

    pre .fg.black   { color: #1d1f21; }
    pre .fg.red     { color: #cc6666; }
    pre .fg.green   { color: #b5bd68; }
    pre .fg.yellow  { color: #f0c674; }
    pre .fg.blue    { color: #81a2be; }
    pre .fg.magenta { color: #b294bb; }
    pre .fg.cyan    { color: #8abeb7; }
    pre .fg.white   { color: #c5c8c6; }

    pre .fg.black.bright    { color: #969896; }
    pre .fg.red.bright      { color: #cc6666; }
    pre .fg.green.bright    { color: #b5bd68; }
    pre .fg.yellow.bright   { color: #f0c674; }
    pre .fg.blue.bright     { color: #81a2be; }
    pre .fg.magenta.bright  { color: #b294bb; }
    pre .fg.cyan.bright     { color: #8abeb7; }
    pre .fg.white.bright    { color: #ffffff; }

    pre .bg.black   { background-color: #1d1f21; }
    pre .bg.red     { background-color: #cc6666; }
    pre .bg.green   { background-color: #b5bd68; }
    pre .bg.yellow  { background-color: #f0c674; }
    pre .bg.blue    { background-color: #81a2be; }
    pre .bg.magenta { background-color: #b294bb; }
    pre .bg.cyan    { background-color: #8abeb7; }
    pre .bg.white   { background-color: #c5c8c6; }

    pre .bg.black.bright    { background-color: #969896; }
    pre .bg.red.bright      { background-color: #cc6666; }
    pre .bg.green.bright    { background-color: #b5bd68; }
    pre .bg.yellow.bright   { background-color: #f0c674; }
    pre .bg.blue.bright     { background-color: #81a2be; }
    pre .bg.magenta.bright  { background-color: #b294bb; }
    pre .bg.cyan.bright     { background-color: #8abeb7; }
    pre .bg.white.bright    { background-color: #ffffff; }
  </style>
<foreignObject x="0" y="0" width="880" height="492">
<div xmlns="http://www.w3.org/1999/xhtml">
<pre><span class="bold">arithmetic-parser REPL v0.1.0</span>
CLI / REPL for arithmetic expressions.
&gt;&gt;&gt; 1 + 2*3
<span class="fg green">7</span>
&gt;&gt;&gt; all = |array, predicate| array.fold(true, |acc, x| acc &amp;&amp; predicate(x));
&gt;&gt;&gt; all
fn(2 args)[
  fold = (native fn),
  true = <span class="fg blue bright">true</span>
]
&gt;&gt;&gt; (1, 2, 5).all(|x| 0 &lt; x)
<span class="fg blue bright">true</span>
&gt;&gt;&gt; (1, -2, 5).all(|x| 0 &lt; x)
<span class="fg blue bright">false</span>
&gt;&gt;&gt; (1, 2, 5, map).all(|x| 0 &lt; x)
<span class="fg red bright">error[EVAL]</span><span class="bold">: Compare requires 2 number arguments</span>
  <span class="fg blue">┌─</span> Snip #6:1:1
  <span class="fg blue">│</span>
<span class="fg blue">1 │</span> (1, 2, 5, map).all(|x| <span class="fg red">0 &lt; x</span>)
  <span class="fg blue">│ -----------------------</span><span class="fg red">^^^^^</span><span class="fg blue">-</span>
  <span class="fg blue">│ │</span>                      <span class="fg red">│   │</span>
  <span class="fg blue">│ │</span>                      <span class="fg red">│   Invalid argument</span>
  <span class="fg blue">│ │</span>                      <span class="fg red">Failed call</span>
  <span class="fg blue">│ Call at depth 3</span>
  <span class="fg blue">│</span>
  <span class="fg blue">┌─</span> Snip #2:1:26
  <span class="fg blue">│</span>
<span class="fg blue">1 │</span> all = |array, predicate| array.fold(true, |acc, x| acc &amp;&amp; predicate(x));
  <span class="fg blue">│                          ----------------------------------------------</span>
  <span class="fg blue">│                          │                                │</span>
  <span class="fg blue">│                          │                                Call at depth 1</span>
  <span class="fg blue">│                          Call at depth 2</span>
</pre></div>
  </foreignObject>
</svg>
