rfold = |xs, acc, fn| {
    (_, acc) = (xs, acc).while(|(xs, _)| xs.len() != 0, |(xs, acc)| {
        xs_any: any = xs;
        (...head: Num, tail: Num) = xs_any;
        (head, fn(acc, tail))
    });
    acc
};

// Check that it works with different accumulator types.
folded = (1, 2, 3).rfold({ empty: [_] = (); empty }, push);
assert_eq(folded, (3, 2, 1));

(4, 5, 6).rfold(true, |acc, x| acc && x > 0);

(min, max) = (1, 2, 3, 4).rfold((MAX, MIN), |(min, max), x| {
     min = if(x < min, x, min);
     max = if(x > max, x, max);
     (min, max)
});
