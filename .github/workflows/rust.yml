name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Minimum supported Rust version.
  msrv: 1.44.0
  # Nightly Rust toolchain for building docs.
  nightly: nightly-2020-10-24

jobs:
  # Checks minimum supported Rust version.
  build-msrv:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-msrv-cargo-build-target

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.msrv }}
          override: true

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all --all-features --all-targets
      - name: Run doc tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all --all-features --doc
      - name: Run parser example
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: -p arithmetic-parser --all-features --example complex_c
      - name: Run eval example
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: -p arithmetic-eval --example owned_module
      - name: Run ElGamal encryption example
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: -p arithmetic-eval --example el_gamal --features bigint,num-bigint/rand
      - name: Run cyclic group example
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: -p arithmetic-eval --example cyclic_group --features bigint,num-bigint/rand

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy
      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14'
      - name: Install wasm-pack
        uses: jetli/wasm-pack-action@v0.3.0
        with:
          version: 'latest'

      - name: Format
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - name: Clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all --all-features --all-targets -- -D warnings

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all --all-features --all-targets
      - name: Run doc tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all --all-features --doc

      - name: Run parser example
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: -p arithmetic-parser --all-features --example complex_c
      - name: Run eval example
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: -p arithmetic-eval --example owned_module
      - name: Run ElGamal encryption example
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: -p arithmetic-eval --example el_gamal --features bigint,num-bigint/rand
      - name: Run cyclic group example
        uses: actions-rs/cargo@v1
        with:
          command: run
          args: -p arithmetic-eval --example cyclic_group --features bigint,num-bigint/rand

      - name: Compile WASM
        run: (cd test-wasm; wasm-pack build --target nodejs)
      - name: Run WASM
        run: node test-wasm/test.js

  document:
    needs:
      - build
      - build-msrv
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Cache cargo bins
        uses: actions/cache@v1
        with:
          path: ~/.cargo/bin
          key: ${{ runner.os }}-cargo-document-bin
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-document-target

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.nightly }}
          profile: minimal
          override: true
      - name: Install deadlinks
        run: cargo deadlinks -V | grep $DEADLINKS_VERS || cargo install cargo-deadlinks --vers $DEADLINKS_VERS --force
        env:
          DEADLINKS_VERS: 0.4.1

      - name: Build docs
        run: |
          cargo clean --doc && \
          cargo rustdoc -p arithmetic-parser --all-features -- -Z unstable-options \
            --extern-html-root-url anyhow=https://docs.rs/anyhow/~1.0.27 \
            --extern-html-root-url nom=https://docs.rs/nom/~6.0.0 \
            --extern-html-root-url nom-locate=https://docs.rs/nom-locate/~2.1.0 && \
          cargo rustdoc -p arithmetic-eval --all-features

      - name: Check dead links
        run: cargo deadlinks --dir target/doc

      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@releases/v3
        if: github.event_name == 'push'
        with:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          BRANCH: gh-pages
          FOLDER: target/doc
          SINGLE_COMMIT: true
